///
/// JResponse.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "Response.hpp"

#include "HybridInputStreamSpec.hpp"
#include "JHybridInputStreamSpec.hpp"
#include <NitroModules/AnyMap.hpp>
#include <NitroModules/JAnyMap.hpp>
#include <NitroModules/JNISharedPtr.hpp>
#include <memory>

namespace margelo::nitro::fastio {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "Response" and the the Kotlin data class "Response".
   */
  struct JResponse final: public jni::JavaClass<JResponse> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/fastio/Response;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct Response by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    Response toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldStatus = clazz->getField<double>("status");
      double status = this->getFieldValue(fieldStatus);
      static const auto fieldBody = clazz->getField<JHybridInputStreamSpec::javaobject>("body");
      jni::local_ref<JHybridInputStreamSpec::javaobject> body = this->getFieldValue(fieldBody);
      static const auto fieldHeaders = clazz->getField<JAnyMap::javaobject>("headers");
      jni::local_ref<JAnyMap::javaobject> headers = this->getFieldValue(fieldHeaders);
      return Response(
        status,
        JNISharedPtr::make_shared_from_jni<JHybridInputStreamSpec>(jni::make_global(body)),
        headers->cthis()->getMap()
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JResponse::javaobject> fromCpp(const Response& value) {
      return newInstance(
        value.status,
        std::dynamic_pointer_cast<JHybridInputStreamSpec>(value.body)->getJavaPart(),
        JAnyMap::create(value.headers)
      );
    }
  };

} // namespace margelo::nitro::fastio
